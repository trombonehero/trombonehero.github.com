<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>libchannel: libchannel-message</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="libchannel.png"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">libchannel
   </div>
   <div id="projectbrief">an abstraction around communications channels</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Groups</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">libchannel-message</div>  </div>
</div><!--header-->
<div class="contents">

<p>Abstractions around packet-oriented messages with data, file descriptors and channels.  
<a href="#details">More...</a></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for libchannel-message:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__libchannel-message.svg" width="339" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</td></tr></table></center>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structmessage.xhtml">message</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">[opaque] A message that can be sent over a <a class="el" href="structchannel.xhtml">channel</a>.  <a href="structmessage.xhtml#details">More...</a><br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga431b6d72ec10ec18e608e7666e43be82"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__libchannel-message.xhtml#ga431b6d72ec10ec18e608e7666e43be82">message_append_data</a> (struct <a class="el" href="structmessage.xhtml">message</a> **m, <a class="el" href="group__libchannel-message.xhtml#gafc4adb1d4af990e654915a6eb5f407e6">array</a>(char))</td></tr>
<tr class="memdesc:ga431b6d72ec10ec18e608e7666e43be82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append [more] raw data to an existing message.  <a href="#ga431b6d72ec10ec18e608e7666e43be82"></a><br/></td></tr>
<tr class="memitem:ga25e166eea50481d3e33c79838f3bff37"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__libchannel-message.xhtml#ga25e166eea50481d3e33c79838f3bff37">message_append_descriptors</a> (struct <a class="el" href="structmessage.xhtml">message</a> **m, <a class="el" href="group__libchannel-message.xhtml#gafc4adb1d4af990e654915a6eb5f407e6">array</a>(int))</td></tr>
<tr class="memdesc:ga25e166eea50481d3e33c79838f3bff37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append [more] descriptors to an existing message.  <a href="#ga25e166eea50481d3e33c79838f3bff37"></a><br/></td></tr>
<tr class="memitem:ga67021953df55f1319f09375c2300b27c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__libchannel-message.xhtml#ga67021953df55f1319f09375c2300b27c">message_append_channels</a> (struct <a class="el" href="structmessage.xhtml">message</a> **m, <a class="el" href="group__libchannel-message.xhtml#gafc4adb1d4af990e654915a6eb5f407e6">array</a>(channelptr))</td></tr>
<tr class="memdesc:ga67021953df55f1319f09375c2300b27c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append [more] raw data to an existing message.  <a href="#ga67021953df55f1319f09375c2300b27c"></a><br/></td></tr>
<tr class="memitem:ga4aa3dbc5775841fc2086f3c69a166a68"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga4aa3dbc5775841fc2086f3c69a166a68"></a>
struct <a class="el" href="structmessage.xhtml">message</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__libchannel-message.xhtml#ga4aa3dbc5775841fc2086f3c69a166a68">message_raw_data</a> (char *data, size_t len)</td></tr>
<tr class="memdesc:ga4aa3dbc5775841fc2086f3c69a166a68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Build a message that only contains raw data. This copies the data. <br/></td></tr>
<tr class="memitem:gaac487fa649f2504153e299dfe9398339"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaac487fa649f2504153e299dfe9398339"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__libchannel-message.xhtml#gaac487fa649f2504153e299dfe9398339">array</a> (char) message_get_data(struct <a class="el" href="structmessage.xhtml">message</a> *)</td></tr>
<tr class="memdesc:gaac487fa649f2504153e299dfe9398339"><td class="mdescLeft">&#160;</td><td class="mdescRight">Obtain a reference to the raw data contained in a message. <br/></td></tr>
<tr class="memitem:gafc4adb1d4af990e654915a6eb5f407e6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gafc4adb1d4af990e654915a6eb5f407e6"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__libchannel-message.xhtml#gafc4adb1d4af990e654915a6eb5f407e6">array</a> (int) message_get_descriptors(struct <a class="el" href="structmessage.xhtml">message</a> *)</td></tr>
<tr class="memdesc:gafc4adb1d4af990e654915a6eb5f407e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Obtain a reference to any descriptors contained in a message. <br/></td></tr>
<tr class="memitem:ga755573d980fdbbfda144f70059a7d761"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga755573d980fdbbfda144f70059a7d761"></a>
size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__libchannel-message.xhtml#ga755573d980fdbbfda144f70059a7d761">message_get_channels</a> (struct <a class="el" href="structmessage.xhtml">message</a> *)</td></tr>
<tr class="memdesc:ga755573d980fdbbfda144f70059a7d761"><td class="mdescLeft">&#160;</td><td class="mdescRight">How many channels does this message hold? <br/></td></tr>
<tr class="memitem:gad0e57d793d86ddc0851a8a92341f565a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gad0e57d793d86ddc0851a8a92341f565a"></a>
struct <a class="el" href="structchannel.xhtml">channel</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__libchannel-message.xhtml#gad0e57d793d86ddc0851a8a92341f565a">message_get_channel</a> (struct <a class="el" href="structmessage.xhtml">message</a> *, size_t)</td></tr>
<tr class="memdesc:gad0e57d793d86ddc0851a8a92341f565a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve a particular channel from the message. <br/></td></tr>
<tr class="memitem:ga163914140b38e0a90eb87ab46011c2f3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga163914140b38e0a90eb87ab46011c2f3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__libchannel-message.xhtml#ga163914140b38e0a90eb87ab46011c2f3">message_free</a> (struct <a class="el" href="structmessage.xhtml">message</a> *)</td></tr>
<tr class="memdesc:ga163914140b38e0a90eb87ab46011c2f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free a message, including any data it has copied. <br/></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<p>Abstractions around packet-oriented messages with data, file descriptors and channels. </p>
<h2>Function Documentation</h2>
<a class="anchor" id="ga67021953df55f1319f09375c2300b27c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool message_append_channels </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structmessage.xhtml">message</a> **&#160;</td>
          <td class="paramname"><em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__libchannel-message.xhtml#gafc4adb1d4af990e654915a6eb5f407e6">array</a>(channelptr)&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Append [more] raw data to an existing message. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">m</td><td>the message to append to; will be re-allocated </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>success (true on success, false on failure) </dd></dl>

<p>Definition at line <a class="el" href="message_8c_source.xhtml#l00146">146</a> of file <a class="el" href="message_8c_source.xhtml">message.c</a>.</p>

<p>References <a class="el" href="libchannel_8c_source.xhtml#l00085">channel_isvalid()</a>, <a class="el" href="libchannel_8c_source.xhtml#l00057">channel_size()</a>, and <a class="el" href="message_8c_source.xhtml#l00100">message_free()</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">        assert(m != NULL);</div>
<div class="line">        assert(*m != NULL);</div>
<div class="line">        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; channels.len; i++)</div>
<div class="line">                assert(<a class="code" href="group__libchannel.xhtml#ga39e73c5006a72b808c59705257af51dd" title="Tests the validity of a pointer that claims to be a channel.">channel_isvalid</a>(channels.data[i]));</div>
<div class="line"></div>
<div class="line">        <a class="code" href="structmessage.xhtml" title="[opaque] A message that can be sent over a channel.">message</a> *old = *m;</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Calculate the total size required to store the channels.</span></div>
<div class="line">        <span class="comment">// There is no universal sizeof(channel), so we must enumerate &#39;em all.</span></div>
<div class="line">        <span class="keywordtype">size_t</span> channel_bytes = 0;</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; old-&gt;channels.len; i++)</div>
<div class="line">                channel_bytes += <a class="code" href="group__libchannel.xhtml#ga02f51b872a4fda6696d63edca2f1acab" title="How many bytes does a particular channel take to store?">channel_size</a>(old-&gt;channels.data + i);</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; channels.len; i++)</div>
<div class="line">                channel_bytes += <a class="code" href="group__libchannel.xhtml#ga02f51b872a4fda6696d63edca2f1acab" title="How many bytes does a particular channel take to store?">channel_size</a>(channels.data[i]);</div>
<div class="line"></div>
<div class="line">        <a class="code" href="structmessage.xhtml" title="[opaque] A message that can be sent over a channel.">message</a> *enlarged = message_realloc(m,</div>
<div class="line">                old-&gt;data.len, old-&gt;descriptors.len, channel_bytes);</div>
<div class="line">        <span class="keywordflow">if</span> (enlarged == NULL) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line">        *m = enlarged;</div>
<div class="line"></div>
<div class="line">        <span class="keywordtype">char</span> *new_channels = (<span class="keywordtype">char</span>*) enlarged-&gt;channels.data;</div>
<div class="line">        <span class="keywordtype">char</span> *next = new_channels;</div>
<div class="line"></div>
<div class="line">        for (<span class="keywordtype">size_t</span> i = 0; i &lt; channels.len; i++) {</div>
<div class="line">                <a class="code" href="structchannel.xhtml" title="[opaque] A communications channel for sending data and capabilities (eg file descriptors and channels...">channel</a> *src = channels.data[i];</div>
<div class="line">                <span class="keywordtype">int</span> copied = channel_copy(next, src);</div>
<div class="line">                <span class="keywordflow">if</span> (copied &lt;= 0) {</div>
<div class="line">                        <a class="code" href="group__libchannel-message.xhtml#ga163914140b38e0a90eb87ab46011c2f3" title="Free a message, including any data it has copied.">message_free</a>(enlarged);</div>
<div class="line">                        <span class="keywordflow">return</span> -1;</div>
<div class="line">                }</div>
<div class="line">                next += copied;</div>
<div class="line">                enlarged-&gt;channels.len++;</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="group__libchannel-message_ga67021953df55f1319f09375c2300b27c_cgraph.svg" width="515" height="115"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ga431b6d72ec10ec18e608e7666e43be82"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool message_append_data </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structmessage.xhtml">message</a> **&#160;</td>
          <td class="paramname"><em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__libchannel-message.xhtml#gafc4adb1d4af990e654915a6eb5f407e6">array</a>(char)&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Append [more] raw data to an existing message. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">m</td><td>the message to append to; will be re-allocated </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>success (true on success, false on failure) </dd></dl>

<p>Definition at line <a class="el" href="message_8c_source.xhtml#l00108">108</a> of file <a class="el" href="message_8c_source.xhtml">message.c</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">        assert(m != NULL);</div>
<div class="line">        assert(*m != NULL);</div>
<div class="line"></div>
<div class="line">        <a class="code" href="structmessage.xhtml" title="[opaque] A message that can be sent over a channel.">message</a> old = **m;</div>
<div class="line">        <a class="code" href="structmessage.xhtml" title="[opaque] A message that can be sent over a channel.">message</a> *enlarged = message_realloc(m,</div>
<div class="line">                old.data.len + data.len, old.descriptors.len, old.channels.len);</div>
<div class="line">        <span class="keywordflow">if</span> (enlarged == NULL) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"></div>
<div class="line">        assert(enlarged-&gt;data.len == old.data.len + data.len);</div>
<div class="line"></div>
<div class="line">        memcpy(enlarged-&gt;data.data + old.data.len, data.data, data.len);</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ga25e166eea50481d3e33c79838f3bff37"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool message_append_descriptors </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structmessage.xhtml">message</a> **&#160;</td>
          <td class="paramname"><em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__libchannel-message.xhtml#gafc4adb1d4af990e654915a6eb5f407e6">array</a>(int)&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Append [more] descriptors to an existing message. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">m</td><td>the message to append to; will be re-allocated </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>success (true on success, false on failure) </dd></dl>

<p>Definition at line <a class="el" href="message_8c_source.xhtml#l00126">126</a> of file <a class="el" href="message_8c_source.xhtml">message.c</a>.</p>
<div class="fragment"><div class="line">{</div>
<div class="line">        assert(mp != NULL);</div>
<div class="line">        assert(*mp != NULL);</div>
<div class="line"></div>
<div class="line">        <a class="code" href="structmessage.xhtml" title="[opaque] A message that can be sent over a channel.">message</a> *m = *mp;</div>
<div class="line">        <span class="keywordtype">size_t</span> oldcount = m-&gt;descriptors.len;</div>
<div class="line"></div>
<div class="line">        <a class="code" href="structmessage.xhtml" title="[opaque] A message that can be sent over a channel.">message</a> *enlarged = message_realloc(mp,</div>
<div class="line">                m-&gt;data.len, m-&gt;descriptors.len + fds.len, m-&gt;channels.len);</div>
<div class="line">        <span class="keywordflow">if</span> (enlarged == NULL) <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"></div>
<div class="line">        assert(enlarged-&gt;descriptors.len == oldcount + fds.len);</div>
<div class="line">        <span class="keywordtype">char</span> *target = (<span class="keywordtype">char</span>*) (enlarged-&gt;descriptors.data + oldcount);</div>
<div class="line">        memcpy(target, fds.data, fds.len * <span class="keyword">sizeof</span>(<span class="keywordtype">int</span>));</div>
<div class="line"></div>
<div class="line">        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line">}</div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Sep 1 2012 01:19:09 for libchannel by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.1.2
</small></address>
</body>
</html>
